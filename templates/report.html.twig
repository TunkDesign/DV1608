{% extends 'base.html.twig' %}

{% block title %}Redovisningar{% endblock %}

{% block body %}
<section class="report-page">
  <div class="container">
    <h1>Redovisning</h1>
    <p>Här samlar jag mina reflektioner och redovisningstexter för varje kursmoment i MVC-kursen.</p>

    <nav class="report-nav">
      <a href="#kmom01">Kmom01</a>
    </nav>

    <article id="kmom01" class="report-section">
      <h2>Kmom01</h2>
      <h3>Förkunskaper</h3>
      <p>Jag har tidigare jobbat med objektorientering i både PHP och Python, mest i egna projekt. Senast använde jag OOP i OOPython-kursen. Jag tycker det är ett bra sätt att strukturera kod på, speciellt när projekten börjar bli större.</p>

      <h3>PHPs modell</h3>
      <p>PHP gör det ganska lätt att komma igång med klasser och objekt. Man skapar en klass med class, och använder new för att skapa objekt. Några grunder man kan behöva förstå är:</p>
      <ul>
        <li>Hur man skapar en klass med egenskaper (variabler) och metoder (funktioner).</li>
        <li>Hur konstruktorn <code>__construct()</code> fungerar.</li>
        <li>Skillnaden mellan public, private och protected.</li>
        <li>Hur man använder arv (en klass som ärver från en annan med extends).</li>
      </ul>
      <p>Det räcker långt för att komma igång med OOP i PHP.</p>

      <h3>Reflektion över Sympony</h3>
      <p>Jag tycker strukturen var ganska omfattande. Det var mycket att ta in i början. Jag är van att bygga mina egna lösningar med OOP och MVC, så jag kände igen mig i upplägget. Däremot har jag aldrig jobbat med Symfony tidigare.</p>
      <p>Symfony verkar väldigt kraftfullt, men det känns också ganska tungt för mindre projekt. Med nästan 200 MB och över 22 000 filer tycker jag att det blir lite för mycket. Jag föredrar lättare lösningar, särskilt när jag bygger själv.</p>

      <h3>PHP The Right Way</h3>
      <p>Jag gillar att artikeln samlar bra tips och "best practices" på ett och samma ställe. Några saker jag fastnade extra för var:</p>
      <ul>
        <li>Dependency Injection - bra för att skriva lösare kopplad kod.</li>
        <li>PSR-standarder - hjälper till att skriva kod som andra lättare kan förstå.</li>
        <li>Säkerhet - påminnelser om att alltid validera och sanera användardata.</li>
      </ul>
      <p>Jag vill lära mig mer om Composer, då det känns som ett naturligt nästa steg.</p>

      <h3>Today I Learned</h3>
      <p>Det jag lärde mig mest av den här delen var hur ett ramverk som Symfony bygger upp ett projekt. Även om jag inte själv hade valt det till ett mindre projekt, så är det intressant att se hur det är uppbyggt. Jag tar med mig många idéer som jag kan använda i mina egna projekt.</p>
    </article>
  </div>
</section>
{% endblock %}